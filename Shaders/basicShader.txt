
#ifdef VERTEX                            
                                             
attribute vec3 a_Position;                 
attribute vec2 a_TexCoord;                 
attribute vec3 a_Normal;                    
                                             
uniform mat4 u_Projection;                    
uniform mat4 u_Model; 
uniform mat4 u_View;                                          
                                             
varying vec3 v_Normal;   
varying vec3 v_Pos;                     
varying vec2 v_TexCoord;                     
                                              
void main()                                
{                                            
  gl_Position = u_Projection * u_View *             
    u_Model * vec4(a_Position, 1);           
  v_Pos = vec3(u_Model * vec4(a_Position,1.0));                                    
  v_Normal = a_Normal;                       
  v_TexCoord = a_TexCoord;                   
}                                            
                                             
#endif                                      
#ifdef FRAGMENT                            
                                           
uniform sampler2D u_Texture;   
uniform vec3 u_LightPos;     
uniform vec3 u_Ambient;     
uniform vec3 u_Emissive;                    
                                            
varying vec3 v_Normal;   
varying vec3 v_Pos;                      
varying vec2 v_TexCoord;                    
                                              
void main()                                   
{                                            
  vec4 tex = texture2D(u_Texture, v_TexCoord); 
  vec3 N = normalize(v_Normal);
  vec3 LightDir = normalize(u_LightPos - v_Pos);
  float diff = max(dot(N,LightDir),0.0);
  vec3 diffuseColour = vec3(1,1,1);
  vec3 diffuse = diff * diffuseColour;
  vec3 light = u_Emissive + u_Ambient + diffuse;
  gl_FragColor = tex * vec4(light,1.0);

  if(gl_FragColor.x == 9) gl_FragColor.x = v_Normal.x; 
}                                            
                                            
#endif                                       